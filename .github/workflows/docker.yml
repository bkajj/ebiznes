name: Build and Push Docker Images

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set production env
        run: |
            cat <<EOF > ./zadanie8_10/backend/.env
            FRONTEND_URL=http://${{ secrets.FRONTEND_HOST }}:3000
            BACKEND_URL=http://${{ secrets.BACKEND_HOST }}:8000
            GIT_CLIENT_ID=${{ secrets.GIT_CLIENT_ID }}
            GIT_CLIENT_SECRET=${{ secrets.GIT_CLIENT_SECRET }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            EOF

      - name: Setup frontend VM
        run: |
          echo "${{ secrets.FRONTEND_KEY }}" > frontend_key.pem
          chmod 600 frontend_key.pem
          ssh -i frontend_key.pem -o StrictHostKeyChecking=no ${{ secrets.AZURE_USER }}@${{ secrets.FRONTEND_HOST }} "mkdir -p ~/app"
          rsync -avz -e "ssh -i frontend_key.pem -o StrictHostKeyChecking=no" zadanie8_10/frontend/docker-compose.frontend.yml ${{ secrets.AZURE_USER }}@${{ secrets.FRONTEND_HOST }}:~/app/docker-compose.yml

      - name: Setup backend VM
        run: |
          sudo apt-get update
          echo "${{ secrets.BACKEND_KEY }}" > backend_key.pem
          chmod 600 backend_key.pem
          ssh -i backend_key.pem -o StrictHostKeyChecking=no ${{ secrets.AZURE_USER }}@${{ secrets.BACKEND_HOST }} "mkdir -p ~/app"
          rsync -avz -e "ssh -i backend_key.pem -o StrictHostKeyChecking=no" ./zadanie8_10/backend/.env ${{ secrets.AZURE_USER }}@${{ secrets.BACKEND_HOST }}:~/app/.env
          rsync -avz -e "ssh -i backend_key.pem -o StrictHostKeyChecking=no" zadanie8_10/backend/docker-compose.backend.yml ${{ secrets.AZURE_USER }}@${{ secrets.BACKEND_HOST }}:~/app/docker-compose.yml
            
      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: ./zadanie8_10/backend
          push: true
          tags: bkaj/backend-ebiz:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./zadanie8_10/frontend
          push: true
          tags: bkaj/frontend-ebiz:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            REACT_APP_BACKEND_URL=http://${{ secrets.BACKEND_HOST }}:8000
            REACT_APP_FRONTEND_URL=http://${{ secrets.FRONTEND_HOST }}:3000

      - name: Deploy frontend on frontend VM
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.FRONTEND_HOST }}
          username: ${{ secrets.AZURE_USER }}
          key: ${{ secrets.FRONTEND_KEY }}
          script: |
            sudo apt-get update
            sudo apt-get install -y docker-compose
            cd ~/app
            sudo docker-compose pull
            sudo docker-compose down
            sudo docker-compose up -d frontend

      - name: Deploy backend on backend VM
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.BACKEND_HOST }}
          username: ${{ secrets.AZURE_USER }}
          key: ${{ secrets.BACKEND_KEY }}
          script: |
            sudo apt-get update
            sudo apt-get install -y docker-compose
            cd ~/app
            sudo docker-compose pull
            sudo docker-compose down
            sudo docker-compose up -d backend

      - name: Clean up SSH keys
        run: rm -f frontend_key.pem backend_key.pem